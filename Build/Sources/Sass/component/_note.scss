//
// Notes
// ============
//
//
// Minimal Usage
// -------------
//
// <div class="note">
//     <div class="note-header">
//         <div class="note-header-bar">
//             <div class="note-title">
//                 ...
//             </div>
//             <div class="note-actions">
//                 ...
//             </div>
//         </div>
//     </div>
//     <div class="note-body">
//         <p>...</p>
//     </div>
// </div>
//

//
// Variables
//
$note-header-bg-scale: -60%;
$note-bg-scale: -85%;
$note-padding: 1rem;

@mixin note-create-variant($state, $value) {
    $note-bg: shift-color($value, $note-bg-scale);
    $note-color: color-contrast($note-bg);
    $note-header-bg: shift-color($value, $note-header-bg-scale);
    $note-header-color: color-contrast($note-header-bg);
    --note-#{$state}-color: #{$note-color};
    --note-#{$state}-bg: #{$note-bg};
    --note-#{$state}-header-color: #{$note-header-color};
    --note-#{$state}-header-bg: #{$note-header-bg};
}

@mixin note-use-variant($state) {
    --note-color: var(--note-#{$state}-color);
    --note-bg: var(--note-#{$state}-bg);
    --note-header-color: var(--note-#{$state}-header-color);
    --note-header-bg: var(--note-#{$state}-header-bg);
}

:root {
    @each $state, $value in $theme-colors {
        @include note-create-variant($state, $value);
    }

    //
    // Variants
    // The light variants have problems beeing generated, they need manual correction.
    //
    --note-light-bg: #{$light};
    --note-light-header-bg: #{shade-color($light, 10%)};
    --note-default-bg: #{$default};
    --note-default-header-bg: #{shade-color($default, 10%)};
}

//
// Component
//
.note-list {
    margin: 1rem 0;
}

.note {
    border-radius: var(--typo3-component-border-radius);
    margin-bottom: 1rem;
    overflow: hidden;
    position: relative;
    z-index: 1;
    color: var(--note-color);
    background-color: var(--note-bg);
    box-shadow: var(--typo3-component-box-shadow);

    @include note-use-variant('default');
}

.note-header {
    color: var(--note-header-color);
    background-color: var(--note-header-bg);
    padding: ($note-padding * .5) $note-padding;
}

.note-header-bar {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: .5rem;
}

.note-actions {
    margin-left: auto;
}

.note-body {
    padding: $note-padding;

    > *:first-child {
        margin-top: 0;
    }

    > *:last-child {
        margin-bottom: 0;
    }
}

//
// Variants
//
@each $state, $value in $theme-colors {
    .note-#{$state} {
        @include note-use-variant($state);
    }
}

// Instruction
.note-category-1 {
    @include note-use-variant('info');
}

// Template
.note-category-2 {
    @include note-use-variant('warning');
}

// Notice
.note-category-3 {
    @include note-use-variant('notice');
}

// Todo
.note-category-4 {
    @include note-use-variant('success');
}
